# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

EXIST_POST="0"
CLUSTER_NUMBERS=<CLUSTER_NUMBERS>
CONTROL_NUMBERS=<CONTROL_NUMBERS>
CLIENT_NUMBERS=<CLIENT_NUMBERS>
TEST_TITLE="ovntest"

POST_CPU="1"
POST_RAM="1024"
CONTROL_CPU="1"
CONTROL_RAM="1024"
CLIENT_CPU="1"
CLIENT_RAM="1024"
 
Vagrant.configure("2") do |config|
    config.vm.box = "ubuntu/xenial64"
    config.vm.provision :shell, path: "init.sh"

    if EXIST_POST == 1
        config.vm.define "#{TEST_TITLE}-post" do |post|
            post.vm.hostname = "#{TEST_TITLE}-post"
            post.vm.synced_folder "./files_for_post", "/opt/files_for_post"
            (1..CLUSTER_NUMBERS).each do |k|
                post.vm.network "private_network", ip: "192.168.11#{k}.100"
            end
            post.vm.provider "virtualbox" do |v|
                v.name = "#{TEST_TITLE}-post"
                v.cpus = POST_CPU
                v.memory = POST_CPU
            end
            post.vm.provision :shell, path: "init_post.sh"
        end
    end

    (1..CLUSTER_NUMBERS).each do |k|
        (1..CONTROL_NUMBERS).each do |i|
            config.vm.define "#{TEST_TITLE}-control#{k}-#{i}" do |ctrl|
                ctrl.vm.hostname = "#{TEST_TITLE}-control#{k}-#{i}"
                ctrl.vm.network "private_network", ip: "192.168.11#{k}.10#{i}"
                ctrl.vm.provider "virtualbox" do |v|
                    v.name = "#{TEST_TITLE}-control#{k}-#{i}"
                    v.memory = CONTROL_RAM
                    v.cpus = CONTROL_CPU
                end
                ctrl.vm.provision :shell, path: "init_control.sh"
            end
        end

        (1..CLIENT_NUMBERS).each do |j|
            config.vm.define "#{TEST_TITLE}-client#{k}-#{j}" do |cli|
                client_ip_suffix = CONTROL_NUMBERS + j
                cli.vm.hostname = "#{TEST_TITLE}-client#{k}-#{j}"
                cli.vm.network "private_network", ip: "192.168.11#{k}.10#{client_ip_suffix}"
                cli.vm.provider "virtualbox" do |v|
                    v.name = "#{TEST_TITLE}-client#{k}-#{j}"
                    v.memory = CLIENT_RAM
                    v.cpus = CLIENT_CPU
                end
                cli.vm.provision :shell, path: "init_client.sh"
            end
        end
    end
end

